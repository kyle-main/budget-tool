{"ast":null,"code":"import { FormGroupDirective, Validators } from '@angular/forms';\nimport { CATEGORIES, PARENT_CATEGORIES } from '../../core/models/category';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/services/transaction.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/checkbox\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"../../common/transaction-accordion/transaction-accordion.component\";\n\nfunction HomeComponent_mat_error_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_mat_error_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, HomeComponent_mat_error_12_span_1_Template, 2, 0, \"span\", 7);\n    i0.ɵɵtemplate(2, HomeComponent_mat_error_12_span_2_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.controls.name.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.controls.name.errors.pattern);\n  }\n}\n\nfunction HomeComponent_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 22);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const category_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", category_r9.value, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(category_r9.parent);\n  }\n}\n\nfunction HomeComponent_mat_error_19_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, HomeComponent_mat_error_19_span_1_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.form.controls.category.errors.required);\n  }\n}\n\nfunction HomeComponent_mat_error_24_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, HomeComponent_mat_error_24_span_1_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.form.controls.amount.errors.required);\n  }\n}\n\nfunction HomeComponent_mat_error_32_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, HomeComponent_mat_error_32_span_1_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.form.controls.date.errors.required);\n  }\n}\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(formBuilder, transactionService) {\n      this.formBuilder = formBuilder;\n      this.transactionService = transactionService;\n      this.transactionList = [];\n      this.recurring = false;\n      this.saveButtonDisabled = true;\n      this.categories = [];\n    }\n\n    ngOnInit() {\n      // TODO: Add type validators to fields\n      this.form = this.formBuilder.group({\n        name: [null, Validators.required],\n        amount: [null, Validators.required],\n        category: [null, Validators.required],\n        date: [null, Validators.required]\n      });\n      this.categories = CATEGORIES;\n    }\n\n    addButtonDisabled() {\n      return this.form.valid;\n    }\n\n    isExpense(parentCategory) {\n      return parentCategory !== PARENT_CATEGORIES.INCOME;\n    }\n\n    addTransaction() {\n      let transaction = this.form.getRawValue();\n      transaction['recurring'] = this.recurring;\n\n      if (this.isExpense(transaction['category'].parent)) {\n        transaction['amount'] = transaction['amount'] * -1;\n      }\n\n      this.transactionList.push(this.castTransaction(transaction));\n      this.saveButtonDisabled = false;\n    }\n\n    castTransaction(list) {\n      let date = list['date'];\n      let t = {\n        name: String(list['name']),\n        amount: Number(list['amount']),\n        category: list['category'],\n        year: date.getFullYear(),\n        month: date.getMonth(),\n        day: date.getDate(),\n        recurring: list['recurring']\n      };\n      return t;\n    }\n\n    clearForm() {\n      this.formGroupDirective.resetForm();\n      this.recurring = false;\n    }\n\n    saveTransactions() {\n      let res = this.transactionService.saveTransactions(this.transactionList);\n      this.transactionList = [];\n      this.saveButtonDisabled = true;\n    }\n\n    setRecurring(recurring) {\n      this.recurring = recurring;\n    }\n\n    setFormTransaction(transaction) {\n      this.clearForm();\n      this.form.get('name').setValue(transaction.name);\n      this.form.get('amount').setValue(transaction.amount);\n      this.recurring = transaction.recurring;\n      let categoryIndex = this.categories.indexOf(this.categories.find(t => t.value === transaction.category.value));\n      this.form.get('category').setValue(this.categories[categoryIndex]);\n      this.form.get('date').setValue(new Date(transaction.year, transaction.month, transaction.day));\n    }\n\n    save() {\n      this.saveTransactions();\n      this.clearForm();\n    }\n\n    submit() {\n      if (!this.form.valid) {\n        // TODO: Add toast to say form invalid\n        console.error('Form invalid!');\n        return;\n      }\n\n      this.addTransaction();\n      this.clearForm();\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TransactionService));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    viewQuery: function HomeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(FormGroupDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formGroupDirective = _t.first);\n      }\n    },\n    decls: 44,\n    vars: 12,\n    consts: [[1, \"float-container\"], [1, \"float-child\"], [1, \"example-container\"], [1, \"form-container\"], [3, \"formGroup\", \"submit\"], [\"appearance\", \"fill\", 1, \"form-field\"], [\"matInput\", \"\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"formControlName\", \"category\"], [\"catSelect\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"amount\"], [\"matInput\", \"\", \"formControlName\", \"date\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [1, \"left-align\"], [3, \"checked\", \"change\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"submit-button\", 3, \"disabled\"], [1, \"save-button\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"disabled\", \"click\"], [3, \"transactions\", \"editTransactionEvent\"], [3, \"value\"], [2, \"float\", \"right\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\");\n        i0.ɵɵtext(4, \"Add a new transaction\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"form\", 4);\n        i0.ɵɵlistener(\"submit\", function HomeComponent_Template_form_submit_7_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(8, \"mat-form-field\", 5)(9, \"mat-label\");\n        i0.ɵɵtext(10, \" Name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵtemplate(12, HomeComponent_mat_error_12_Template, 3, 2, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 5)(14, \"mat-label\");\n        i0.ɵɵtext(15, \" Category \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-select\", 8, 9);\n        i0.ɵɵtemplate(18, HomeComponent_mat_option_18_Template, 4, 3, \"mat-option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, HomeComponent_mat_error_19_Template, 2, 1, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-form-field\", 5)(21, \"mat-label\");\n        i0.ɵɵtext(22, \" Amount \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 11);\n        i0.ɵɵtemplate(24, HomeComponent_mat_error_24_Template, 2, 1, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\", 5)(26, \"mat-label\");\n        i0.ɵɵtext(27, \" Date \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 12)(29, \"mat-datepicker-toggle\", 13)(30, \"mat-datepicker\", null, 14);\n        i0.ɵɵtemplate(32, HomeComponent_mat_error_32_Template, 2, 1, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 15)(34, \"mat-checkbox\", 16);\n        i0.ɵɵlistener(\"change\", function HomeComponent_Template_mat_checkbox_change_34_listener($event) {\n          return ctx.setRecurring($event.checked);\n        });\n        i0.ɵɵtext(35, \" Recurring\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"button\", 17);\n        i0.ɵɵtext(37, \" Add Transaction \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(38, \"div\", 1)(39, \"div\", 3)(40, \"div\", 18)(41, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_41_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(42, \" Save Transactions \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"app-transaction-accordion\", 20);\n        i0.ɵɵlistener(\"editTransactionEvent\", function HomeComponent_Template_app_transaction_accordion_editTransactionEvent_43_listener($event) {\n          return ctx.setFormTransaction($event);\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r5 = i0.ɵɵreference(31);\n\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.name.touched && ctx.form.controls.name.invalid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.category.touched && ctx.form.controls.category.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.amount.touched && ctx.form.controls.amount.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matDatepicker\", _r5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r5);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.date.touched && ctx.form.controls.date.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"checked\", ctx.recurring);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.saveButtonDisabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"transactions\", ctx.transactionList);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.MatButton, i5.MatError, i5.MatFormField, i5.MatLabel, i5.MatSuffix, i6.MatInput, i7.MatSelect, i8.MatOption, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i9.MatCheckbox, i10.MatDatepicker, i10.MatDatepickerInput, i10.MatDatepickerToggle, i11.TransactionAccordionComponent],\n    styles: [\".example-container[_ngcontent-%COMP%]{text-align:center;margin:auto}.form-container[_ngcontent-%COMP%]{margin:20px auto 1px}.form-field[_ngcontent-%COMP%]{display:block}.left-align[_ngcontent-%COMP%]{text-align:left}.submit-button[_ngcontent-%COMP%], .save-button[_ngcontent-%COMP%]{float:right}.float-container[_ngcontent-%COMP%]{display:flex;justify-content:center;flex-wrap:wrap}.float-child[_ngcontent-%COMP%]{max-width:-webkit-fit-content;max-width:-moz-fit-content;max-width:fit-content;min-width:400px;flex-grow:3;padding:20px;margin:5px}\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}